// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: texus_room.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texus {

  /// <summary>Holder for reflection information generated from texus_room.proto</summary>
  public static partial class TexusRoomReflection {

    #region Descriptor
    /// <summary>File descriptor for texus_room.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TexusRoomReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChB0ZXh1c19yb29tLnByb3RvEgVUZXh1cyIxCg1QbGF5ZXJUcnlKb2luEhAK",
            "CFBsYXllcklEGAEgASgJEg4KBlJvb21JRBgCIAEoBSJxChBQbGF5ZXJKb2lu",
            "UmVzdWx0EhAKCFBsYXllcklEGAEgASgJEg4KBlJvb21JRBgCIAEoBRISCgpK",
            "b2luUmVzdWx0GAMgASgFEicKCVNlYXRUYWJsZRgEIAMoCzIULlRleHVzLlNl",
            "YXRUYWJsZUl0ZW0iNQoRUGxheWVyVHJ5UXVpdFJvb20SEAoIUGxheWVySUQY",
            "ASABKAkSDgoGUm9vbUlEGAIgASgFInUKFFBsYXllclF1aXRSb29tUmVzdWx0",
            "EhAKCFBsYXllcklEGAEgASgJEg4KBlJvb21JRBgCIAEoBRISCgpRdWl0UmVz",
            "dWx0GAMgASgFEicKCVNlYXRUYWJsZRgEIAMoCzIULlRleHVzLlNlYXRUYWJs",
            "ZUl0ZW0iNQoNU2VhdFRhYmxlSXRlbRIQCghQbGF5ZXJJZBgBIAEoCRISCgpT",
            "ZWF0TnVtYmVyGAIgASgFIj0KEkJyb2FkY2FzdFNlYXRUYWJsZRInCglTZWF0",
            "VGFibGUYASADKAsyFC5UZXh1cy5TZWF0VGFibGVJdGVtIikKA0dldBIQCghQ",
            "bGF5ZXJJRBgBIAEoCRIQCghQYXNzd29yZBgCIAEoCSIeCg5QbGF5ZXJTeW5j",
            "RGF0YRIMCgROYW1lGAEgASgMIkMKD1BsYXllckNyZWF0ZVJlcRIQCghQbGF5",
            "ZXJJRBgBIAEoCRIQCghQYXNzd29yZBgCIAEoCRIMCgROYW1lGAMgASgMIlEK",
            "D1BsYXllckNyZWF0ZVJzcBIOCgZSZXN1bHQYASABKAUSEAoIUGxheWVySUQY",
            "AiABKAkSDAoETmFtZRgDIAEoDBIOCgZSZWFzb24YBCABKAkq6QEKCkNMSUVO",
            "VF9DTUQSFgoSQ0xJRU5UX0NNRF9JTlZBTElEEAASFgoQQ0xJRU5UX0NNRF9C",
            "RUdJThCw6gESEQoLQ0xJRU5UX1BJTkcQseoBEhYKEENMSUVOVF9MT0dJTl9S",
            "RVEQtOoBEhcKEUNMSUVOVF9DUkVBVEVfUkVRELXqARIZChNDTElFTlRfQU5O",
            "T1VOQ0VfUkVRELbqARIaChRDTElFTlRfSk9JTl9ST09NX1JFURC36gESGgoU",
            "Q0xJRU5UX1FVSVRfUk9PTV9SRVEQuOoBEhQKDkNMSUVOVF9DTURfRU5EEOiB",
            "AiqXAgoKU0VSVkVSX0NNRBIWChJTRVJWRVJfQ01EX0lOVkFMSUQQABIVChBT",
            "RVJWRVJfQ01EX0JFR0lOEOgHEhAKC1NFUlZFUl9QT05HEOkHEhUKEFNFUlZF",
            "Ul9MT0dJTl9SU1AQ7AcSFgoRU0VSVkVSX0NSRUFURV9SU1AQ7QcSGAoTU0VS",
            "VkVSX0FOTk9VTkNFX1JTUBDuBxIaChVTRVJWRVJfSlVER0VfSk9JTl9SU1AQ",
            "7wcSGAoTU0VSVkVSX1FVSVRST09NX1JTUBDwBxIfChpTRVJWRVJfQlJPQURD",
            "QVNUX1NFQVRUQUJMRRDxBxITCg5HTV9PUEVSQVRFX1JTUBDMCBITCg5TRVJW",
            "RVJfQ01EX0VORBCQTiqZBAoRUFJPVE9fUkVTVUxUX0NPREUSGgoWU0VSVkVS",
            "X0xPR0lOX1JFU1VMVF9PSxAAEhwKGFNFUlZFUl9MT0dJTl9SRVNVTFRfRkFJ",
            "TBABEjQKJ1NFUlZFUl9MT0dJTl9SRVNVTFRfRkFJTF9OT19TVUNIX1BMQVlF",
            "UhD+//////////8BEiwKKFNFUlZFUl9MT0dJTl9SRVNVTFRfRkFJTF9BTFJF",
            "QURZX0lOX0dBTUUQAxIiCh5TRVJWRVJfTE9HSU5fUkVTVUxUX0ZBSUxfV1JP",
            "TkcQBBIWChJKT0lOUk9PTV9SRVNVTFRfT0sQBRIvCitKT0lOUk9PTV9SRVNV",
            "TFRfRkFJTF9FWElTVElOR19QTEFZRVJfSU5ST09NEAYSJQohSk9JTlJPT01f",
            "UkVTVUxUX0ZBSUxfTk9fU1VDSF9ST09NEAcSJQohSk9JTlJPT01fUkVTVUxU",
            "X0ZBSUxfQkFEX1BMQVlFUklEEAgSLQopSk9JTlJPT01fUkVTVUxUX0ZBSUxf",
            "UExBWUVSX0FNT1VOVF9FWENFRUQQCRIWChJRVUlUUk9PTV9SRVNVTFRfT0sQ",
            "DxIYChRRVUlUUk9PTV9SRVNVTFRfRkFJTBAQEiUKIVFVSVRST09NX1JFU1VM",
            "VF9GQUlMX05PX1NVQ0hfUk9PTRAREiMKH1FVSVRST09NX1JFU1VMVF9GQUlM",
            "X0lOVkFMSURfSUQQEmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Texus.CLIENT_CMD), typeof(global::Texus.SERVER_CMD), typeof(global::Texus.PROTO_RESULT_CODE), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texus.PlayerTryJoin), global::Texus.PlayerTryJoin.Parser, new[]{ "PlayerID", "RoomID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texus.PlayerJoinResult), global::Texus.PlayerJoinResult.Parser, new[]{ "PlayerID", "RoomID", "JoinResult", "SeatTable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texus.PlayerTryQuitRoom), global::Texus.PlayerTryQuitRoom.Parser, new[]{ "PlayerID", "RoomID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texus.PlayerQuitRoomResult), global::Texus.PlayerQuitRoomResult.Parser, new[]{ "PlayerID", "RoomID", "QuitResult", "SeatTable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texus.SeatTableItem), global::Texus.SeatTableItem.Parser, new[]{ "PlayerId", "SeatNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texus.BroadcastSeatTable), global::Texus.BroadcastSeatTable.Parser, new[]{ "SeatTable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texus.Get), global::Texus.Get.Parser, new[]{ "PlayerID", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texus.PlayerSyncData), global::Texus.PlayerSyncData.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texus.PlayerCreateReq), global::Texus.PlayerCreateReq.Parser, new[]{ "PlayerID", "Password", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texus.PlayerCreateRsp), global::Texus.PlayerCreateRsp.Parser, new[]{ "Result", "PlayerID", "Name", "Reason" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CLIENT_CMD {
    [pbr::OriginalName("CLIENT_CMD_INVALID")] Invalid = 0,
    [pbr::OriginalName("CLIENT_CMD_BEGIN")] Begin = 30000,
    [pbr::OriginalName("CLIENT_PING")] ClientPing = 30001,
    [pbr::OriginalName("CLIENT_LOGIN_REQ")] ClientLoginReq = 30004,
    [pbr::OriginalName("CLIENT_CREATE_REQ")] ClientCreateReq = 30005,
    [pbr::OriginalName("CLIENT_ANNOUNCE_REQ")] ClientAnnounceReq = 30006,
    /// <summary>
    ///客户端请求加入特定房间的请求
    /// </summary>
    [pbr::OriginalName("CLIENT_JOIN_ROOM_REQ")] ClientJoinRoomReq = 30007,
    /// <summary>
    ///客户端请求退出房间的请求
    /// </summary>
    [pbr::OriginalName("CLIENT_QUIT_ROOM_REQ")] ClientQuitRoomReq = 30008,
    [pbr::OriginalName("CLIENT_CMD_END")] End = 33000,
  }

  public enum SERVER_CMD {
    [pbr::OriginalName("SERVER_CMD_INVALID")] Invalid = 0,
    [pbr::OriginalName("SERVER_CMD_BEGIN")] Begin = 1000,
    [pbr::OriginalName("SERVER_PONG")] ServerPong = 1001,
    [pbr::OriginalName("SERVER_LOGIN_RSP")] ServerLoginRsp = 1004,
    [pbr::OriginalName("SERVER_CREATE_RSP")] ServerCreateRsp = 1005,
    [pbr::OriginalName("SERVER_ANNOUNCE_RSP")] ServerAnnounceRsp = 1006,
    /// <summary>
    ///服务端仲裁是否允许客户加入特定房间的仲裁结果反馈
    /// </summary>
    [pbr::OriginalName("SERVER_JUDGE_JOIN_RSP")] ServerJudgeJoinRsp = 1007,
    /// <summary>
    ///服务端反馈退出房间结果的告知
    /// </summary>
    [pbr::OriginalName("SERVER_QUITROOM_RSP")] ServerQuitroomRsp = 1008,
    [pbr::OriginalName("SERVER_BROADCAST_SEATTABLE")] ServerBroadcastSeattable = 1009,
    [pbr::OriginalName("GM_OPERATE_RSP")] GmOperateRsp = 1100,
    [pbr::OriginalName("SERVER_CMD_END")] End = 10000,
  }

  public enum PROTO_RESULT_CODE {
    [pbr::OriginalName("SERVER_LOGIN_RESULT_OK")] ServerLoginResultOk = 0,
    [pbr::OriginalName("SERVER_LOGIN_RESULT_FAIL")] ServerLoginResultFail = 1,
    [pbr::OriginalName("SERVER_LOGIN_RESULT_FAIL_NO_SUCH_PLAYER")] ServerLoginResultFailNoSuchPlayer = -2,
    [pbr::OriginalName("SERVER_LOGIN_RESULT_FAIL_ALREADY_IN_GAME")] ServerLoginResultFailAlreadyInGame = 3,
    [pbr::OriginalName("SERVER_LOGIN_RESULT_FAIL_WRONG")] ServerLoginResultFailWrong = 4,
    [pbr::OriginalName("JOINROOM_RESULT_OK")] JoinroomResultOk = 5,
    [pbr::OriginalName("JOINROOM_RESULT_FAIL_EXISTING_PLAYER_INROOM")] JoinroomResultFailExistingPlayerInroom = 6,
    [pbr::OriginalName("JOINROOM_RESULT_FAIL_NO_SUCH_ROOM")] JoinroomResultFailNoSuchRoom = 7,
    [pbr::OriginalName("JOINROOM_RESULT_FAIL_BAD_PLAYERID")] JoinroomResultFailBadPlayerid = 8,
    [pbr::OriginalName("JOINROOM_RESULT_FAIL_PLAYER_AMOUNT_EXCEED")] JoinroomResultFailPlayerAmountExceed = 9,
    [pbr::OriginalName("QUITROOM_RESULT_OK")] QuitroomResultOk = 15,
    [pbr::OriginalName("QUITROOM_RESULT_FAIL")] QuitroomResultFail = 16,
    [pbr::OriginalName("QUITROOM_RESULT_FAIL_NO_SUCH_ROOM")] QuitroomResultFailNoSuchRoom = 17,
    [pbr::OriginalName("QUITROOM_RESULT_FAIL_INVALID_ID")] QuitroomResultFailInvalidId = 18,
  }

  #endregion

  #region Messages
  public sealed partial class PlayerTryJoin : pb::IMessage<PlayerTryJoin> {
    private static readonly pb::MessageParser<PlayerTryJoin> _parser = new pb::MessageParser<PlayerTryJoin>(() => new PlayerTryJoin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerTryJoin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texus.TexusRoomReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerTryJoin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerTryJoin(PlayerTryJoin other) : this() {
      playerID_ = other.playerID_;
      roomID_ = other.roomID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerTryJoin Clone() {
      return new PlayerTryJoin(this);
    }

    /// <summary>Field number for the "PlayerID" field.</summary>
    public const int PlayerIDFieldNumber = 1;
    private string playerID_ = "";
    /// <summary>
    ///节省时间的做法，后续可迭代修正：用户输入PlayerID作为唯一标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomID" field.</summary>
    public const int RoomIDFieldNumber = 2;
    private int roomID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomID {
      get { return roomID_; }
      set {
        roomID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerTryJoin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerTryJoin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerID != other.PlayerID) return false;
      if (RoomID != other.RoomID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (RoomID != 0) hash ^= RoomID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (RoomID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (RoomID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerTryJoin other) {
      if (other == null) {
        return;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.RoomID != 0) {
        RoomID = other.RoomID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 16: {
            RoomID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerJoinResult : pb::IMessage<PlayerJoinResult> {
    private static readonly pb::MessageParser<PlayerJoinResult> _parser = new pb::MessageParser<PlayerJoinResult>(() => new PlayerJoinResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerJoinResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texus.TexusRoomReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerJoinResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerJoinResult(PlayerJoinResult other) : this() {
      playerID_ = other.playerID_;
      roomID_ = other.roomID_;
      joinResult_ = other.joinResult_;
      seatTable_ = other.seatTable_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerJoinResult Clone() {
      return new PlayerJoinResult(this);
    }

    /// <summary>Field number for the "PlayerID" field.</summary>
    public const int PlayerIDFieldNumber = 1;
    private string playerID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomID" field.</summary>
    public const int RoomIDFieldNumber = 2;
    private int roomID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomID {
      get { return roomID_; }
      set {
        roomID_ = value;
      }
    }

    /// <summary>Field number for the "JoinResult" field.</summary>
    public const int JoinResultFieldNumber = 3;
    private int joinResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JoinResult {
      get { return joinResult_; }
      set {
        joinResult_ = value;
      }
    }

    /// <summary>Field number for the "SeatTable" field.</summary>
    public const int SeatTableFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Texus.SeatTableItem> _repeated_seatTable_codec
        = pb::FieldCodec.ForMessage(34, global::Texus.SeatTableItem.Parser);
    private readonly pbc::RepeatedField<global::Texus.SeatTableItem> seatTable_ = new pbc::RepeatedField<global::Texus.SeatTableItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Texus.SeatTableItem> SeatTable {
      get { return seatTable_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerJoinResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerJoinResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerID != other.PlayerID) return false;
      if (RoomID != other.RoomID) return false;
      if (JoinResult != other.JoinResult) return false;
      if(!seatTable_.Equals(other.seatTable_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (RoomID != 0) hash ^= RoomID.GetHashCode();
      if (JoinResult != 0) hash ^= JoinResult.GetHashCode();
      hash ^= seatTable_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (RoomID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomID);
      }
      if (JoinResult != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(JoinResult);
      }
      seatTable_.WriteTo(output, _repeated_seatTable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (RoomID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomID);
      }
      if (JoinResult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JoinResult);
      }
      size += seatTable_.CalculateSize(_repeated_seatTable_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerJoinResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.RoomID != 0) {
        RoomID = other.RoomID;
      }
      if (other.JoinResult != 0) {
        JoinResult = other.JoinResult;
      }
      seatTable_.Add(other.seatTable_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 16: {
            RoomID = input.ReadInt32();
            break;
          }
          case 24: {
            JoinResult = input.ReadInt32();
            break;
          }
          case 34: {
            seatTable_.AddEntriesFrom(input, _repeated_seatTable_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerTryQuitRoom : pb::IMessage<PlayerTryQuitRoom> {
    private static readonly pb::MessageParser<PlayerTryQuitRoom> _parser = new pb::MessageParser<PlayerTryQuitRoom>(() => new PlayerTryQuitRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerTryQuitRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texus.TexusRoomReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerTryQuitRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerTryQuitRoom(PlayerTryQuitRoom other) : this() {
      playerID_ = other.playerID_;
      roomID_ = other.roomID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerTryQuitRoom Clone() {
      return new PlayerTryQuitRoom(this);
    }

    /// <summary>Field number for the "PlayerID" field.</summary>
    public const int PlayerIDFieldNumber = 1;
    private string playerID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomID" field.</summary>
    public const int RoomIDFieldNumber = 2;
    private int roomID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomID {
      get { return roomID_; }
      set {
        roomID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerTryQuitRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerTryQuitRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerID != other.PlayerID) return false;
      if (RoomID != other.RoomID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (RoomID != 0) hash ^= RoomID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (RoomID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (RoomID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerTryQuitRoom other) {
      if (other == null) {
        return;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.RoomID != 0) {
        RoomID = other.RoomID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 16: {
            RoomID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerQuitRoomResult : pb::IMessage<PlayerQuitRoomResult> {
    private static readonly pb::MessageParser<PlayerQuitRoomResult> _parser = new pb::MessageParser<PlayerQuitRoomResult>(() => new PlayerQuitRoomResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerQuitRoomResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texus.TexusRoomReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerQuitRoomResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerQuitRoomResult(PlayerQuitRoomResult other) : this() {
      playerID_ = other.playerID_;
      roomID_ = other.roomID_;
      quitResult_ = other.quitResult_;
      seatTable_ = other.seatTable_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerQuitRoomResult Clone() {
      return new PlayerQuitRoomResult(this);
    }

    /// <summary>Field number for the "PlayerID" field.</summary>
    public const int PlayerIDFieldNumber = 1;
    private string playerID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomID" field.</summary>
    public const int RoomIDFieldNumber = 2;
    private int roomID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomID {
      get { return roomID_; }
      set {
        roomID_ = value;
      }
    }

    /// <summary>Field number for the "QuitResult" field.</summary>
    public const int QuitResultFieldNumber = 3;
    private int quitResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuitResult {
      get { return quitResult_; }
      set {
        quitResult_ = value;
      }
    }

    /// <summary>Field number for the "SeatTable" field.</summary>
    public const int SeatTableFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Texus.SeatTableItem> _repeated_seatTable_codec
        = pb::FieldCodec.ForMessage(34, global::Texus.SeatTableItem.Parser);
    private readonly pbc::RepeatedField<global::Texus.SeatTableItem> seatTable_ = new pbc::RepeatedField<global::Texus.SeatTableItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Texus.SeatTableItem> SeatTable {
      get { return seatTable_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerQuitRoomResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerQuitRoomResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerID != other.PlayerID) return false;
      if (RoomID != other.RoomID) return false;
      if (QuitResult != other.QuitResult) return false;
      if(!seatTable_.Equals(other.seatTable_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (RoomID != 0) hash ^= RoomID.GetHashCode();
      if (QuitResult != 0) hash ^= QuitResult.GetHashCode();
      hash ^= seatTable_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (RoomID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomID);
      }
      if (QuitResult != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(QuitResult);
      }
      seatTable_.WriteTo(output, _repeated_seatTable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (RoomID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomID);
      }
      if (QuitResult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuitResult);
      }
      size += seatTable_.CalculateSize(_repeated_seatTable_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerQuitRoomResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.RoomID != 0) {
        RoomID = other.RoomID;
      }
      if (other.QuitResult != 0) {
        QuitResult = other.QuitResult;
      }
      seatTable_.Add(other.seatTable_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 16: {
            RoomID = input.ReadInt32();
            break;
          }
          case 24: {
            QuitResult = input.ReadInt32();
            break;
          }
          case 34: {
            seatTable_.AddEntriesFrom(input, _repeated_seatTable_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SeatTableItem : pb::IMessage<SeatTableItem> {
    private static readonly pb::MessageParser<SeatTableItem> _parser = new pb::MessageParser<SeatTableItem>(() => new SeatTableItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SeatTableItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texus.TexusRoomReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeatTableItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeatTableItem(SeatTableItem other) : this() {
      playerId_ = other.playerId_;
      seatNumber_ = other.seatNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeatTableItem Clone() {
      return new SeatTableItem(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SeatNumber" field.</summary>
    public const int SeatNumberFieldNumber = 2;
    private int seatNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SeatNumber {
      get { return seatNumber_; }
      set {
        seatNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SeatTableItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SeatTableItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (SeatNumber != other.SeatNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (SeatNumber != 0) hash ^= SeatNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (SeatNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SeatNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (SeatNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SeatTableItem other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.SeatNumber != 0) {
        SeatNumber = other.SeatNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            SeatNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BroadcastSeatTable : pb::IMessage<BroadcastSeatTable> {
    private static readonly pb::MessageParser<BroadcastSeatTable> _parser = new pb::MessageParser<BroadcastSeatTable>(() => new BroadcastSeatTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BroadcastSeatTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texus.TexusRoomReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastSeatTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastSeatTable(BroadcastSeatTable other) : this() {
      seatTable_ = other.seatTable_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastSeatTable Clone() {
      return new BroadcastSeatTable(this);
    }

    /// <summary>Field number for the "SeatTable" field.</summary>
    public const int SeatTableFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texus.SeatTableItem> _repeated_seatTable_codec
        = pb::FieldCodec.ForMessage(10, global::Texus.SeatTableItem.Parser);
    private readonly pbc::RepeatedField<global::Texus.SeatTableItem> seatTable_ = new pbc::RepeatedField<global::Texus.SeatTableItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Texus.SeatTableItem> SeatTable {
      get { return seatTable_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BroadcastSeatTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BroadcastSeatTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!seatTable_.Equals(other.seatTable_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= seatTable_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      seatTable_.WriteTo(output, _repeated_seatTable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += seatTable_.CalculateSize(_repeated_seatTable_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BroadcastSeatTable other) {
      if (other == null) {
        return;
      }
      seatTable_.Add(other.seatTable_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            seatTable_.AddEntriesFrom(input, _repeated_seatTable_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Get : pb::IMessage<Get> {
    private static readonly pb::MessageParser<Get> _parser = new pb::MessageParser<Get>(() => new Get());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Get> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texus.TexusRoomReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Get() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Get(Get other) : this() {
      playerID_ = other.playerID_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Get Clone() {
      return new Get(this);
    }

    /// <summary>Field number for the "PlayerID" field.</summary>
    public const int PlayerIDFieldNumber = 1;
    private string playerID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Get);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Get other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerID != other.PlayerID) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Get other) {
      if (other == null) {
        return;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerSyncData : pb::IMessage<PlayerSyncData> {
    private static readonly pb::MessageParser<PlayerSyncData> _parser = new pb::MessageParser<PlayerSyncData>(() => new PlayerSyncData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerSyncData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texus.TexusRoomReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSyncData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSyncData(PlayerSyncData other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSyncData Clone() {
      return new PlayerSyncData(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private pb::ByteString name_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerSyncData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerSyncData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerSyncData other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerCreateReq : pb::IMessage<PlayerCreateReq> {
    private static readonly pb::MessageParser<PlayerCreateReq> _parser = new pb::MessageParser<PlayerCreateReq>(() => new PlayerCreateReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerCreateReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texus.TexusRoomReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCreateReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCreateReq(PlayerCreateReq other) : this() {
      playerID_ = other.playerID_;
      password_ = other.password_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCreateReq Clone() {
      return new PlayerCreateReq(this);
    }

    /// <summary>Field number for the "PlayerID" field.</summary>
    public const int PlayerIDFieldNumber = 1;
    private string playerID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private pb::ByteString name_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerCreateReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerCreateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerID != other.PlayerID) return false;
      if (Password != other.Password) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerID);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerCreateReq other) {
      if (other == null) {
        return;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerID = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerCreateRsp : pb::IMessage<PlayerCreateRsp> {
    private static readonly pb::MessageParser<PlayerCreateRsp> _parser = new pb::MessageParser<PlayerCreateRsp>(() => new PlayerCreateRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerCreateRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texus.TexusRoomReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCreateRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCreateRsp(PlayerCreateRsp other) : this() {
      result_ = other.result_;
      playerID_ = other.playerID_;
      name_ = other.name_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCreateRsp Clone() {
      return new PlayerCreateRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "PlayerID" field.</summary>
    public const int PlayerIDFieldNumber = 2;
    private string playerID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private pb::ByteString name_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private string reason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerCreateRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerCreateRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (PlayerID != other.PlayerID) return false;
      if (Name != other.Name) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (PlayerID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerID);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerCreateRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            PlayerID = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
