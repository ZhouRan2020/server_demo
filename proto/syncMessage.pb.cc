// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: syncMessage.proto

#include "syncMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_syncMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_syncMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Float3;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_syncMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Float4;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_syncMessage_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PlayerSyncInfo;
}  // namespace protobuf_syncMessage_2eproto
namespace TCCamp {
class Float3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Float3>
      _instance;
} _Float3_default_instance_;
class Float4DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Float4>
      _instance;
} _Float4_default_instance_;
class PlayerSyncInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerSyncInfo>
      _instance;
} _PlayerSyncInfo_default_instance_;
class ServerSyncInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerSyncInfo>
      _instance;
} _ServerSyncInfo_default_instance_;
}  // namespace TCCamp
namespace protobuf_syncMessage_2eproto {
static void InitDefaultsFloat3() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_Float3_default_instance_;
    new (ptr) ::TCCamp::Float3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::Float3::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Float3 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFloat3}, {}};

static void InitDefaultsFloat4() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_Float4_default_instance_;
    new (ptr) ::TCCamp::Float4();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::Float4::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Float4 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFloat4}, {}};

static void InitDefaultsPlayerSyncInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_PlayerSyncInfo_default_instance_;
    new (ptr) ::TCCamp::PlayerSyncInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::PlayerSyncInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PlayerSyncInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPlayerSyncInfo}, {
      &protobuf_syncMessage_2eproto::scc_info_Float3.base,
      &protobuf_syncMessage_2eproto::scc_info_Float4.base,}};

static void InitDefaultsServerSyncInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_ServerSyncInfo_default_instance_;
    new (ptr) ::TCCamp::ServerSyncInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::ServerSyncInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerSyncInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerSyncInfo}, {
      &protobuf_syncMessage_2eproto::scc_info_PlayerSyncInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Float3.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Float4.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerSyncInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerSyncInfo.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Float3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Float3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Float3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Float3, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Float4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Float4, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Float4, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Float4, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Float4, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSyncInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSyncInfo, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSyncInfo, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSyncInfo, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSyncInfo, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSyncInfo, playername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ServerSyncInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ServerSyncInfo, players_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::TCCamp::Float3)},
  { 8, -1, sizeof(::TCCamp::Float4)},
  { 17, -1, sizeof(::TCCamp::PlayerSyncInfo)},
  { 27, -1, sizeof(::TCCamp::ServerSyncInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_Float3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_Float4_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_PlayerSyncInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_ServerSyncInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "syncMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021syncMessage.proto\022\006TCCamp\")\n\006Float3\022\t\n"
      "\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"4\n\006Float4"
      "\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\t\n\001w\030\004"
      " \001(\002\"\211\001\n\016PlayerSyncInfo\022 \n\010Position\030\001 \001("
      "\0132\016.TCCamp.Float3\022 \n\010Rotation\030\002 \001(\0132\016.TC"
      "Camp.Float4\022\r\n\005Speed\030\003 \001(\002\022\020\n\010PlayerID\030\004"
      " \001(\t\022\022\n\nPlayerName\030\005 \001(\014\"9\n\016ServerSyncIn"
      "fo\022\'\n\007Players\030\001 \003(\0132\026.TCCamp.PlayerSyncI"
      "nfo*B\n\017CLIENT_SYNC_CMD\022\022\n\016CLIENT_INVALID"
      "\020\000\022\033\n\025CLIENT_SYNC_DATA_SEND\020\231\362\001*z\n\017SERVE"
      "R_SYNC_CMD\022\022\n\016SERVER_INVALID\020\000\022\032\n\025SERVER"
      "_SYNC_DATA_SEND\020\261\t\022\034\n\027SERVER_NEW_PLAYER_"
      "LOGIN\020\263\t\022\031\n\024SERVER_PLAYER_LOGOUT\020\264\tb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 523);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "syncMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_syncMessage_2eproto
namespace TCCamp {
const ::google::protobuf::EnumDescriptor* CLIENT_SYNC_CMD_descriptor() {
  protobuf_syncMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_syncMessage_2eproto::file_level_enum_descriptors[0];
}
bool CLIENT_SYNC_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 31001:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SERVER_SYNC_CMD_descriptor() {
  protobuf_syncMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_syncMessage_2eproto::file_level_enum_descriptors[1];
}
bool SERVER_SYNC_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 1201:
    case 1203:
    case 1204:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Float3::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Float3::kXFieldNumber;
const int Float3::kYFieldNumber;
const int Float3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Float3::Float3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_syncMessage_2eproto::scc_info_Float3.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.Float3)
}
Float3::Float3(const Float3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.Float3)
}

void Float3::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Float3::~Float3() {
  // @@protoc_insertion_point(destructor:TCCamp.Float3)
  SharedDtor();
}

void Float3::SharedDtor() {
}

void Float3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Float3::descriptor() {
  ::protobuf_syncMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_syncMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Float3& Float3::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_syncMessage_2eproto::scc_info_Float3.base);
  return *internal_default_instance();
}


void Float3::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.Float3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Float3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.Float3)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.Float3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.Float3)
  return false;
#undef DO_
}

void Float3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.Float3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.Float3)
}

::google::protobuf::uint8* Float3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.Float3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.Float3)
  return target;
}

size_t Float3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.Float3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Float3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.Float3)
  GOOGLE_DCHECK_NE(&from, this);
  const Float3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Float3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.Float3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.Float3)
    MergeFrom(*source);
  }
}

void Float3::MergeFrom(const Float3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.Float3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Float3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.Float3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Float3::CopyFrom(const Float3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.Float3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Float3::IsInitialized() const {
  return true;
}

void Float3::Swap(Float3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Float3::InternalSwap(Float3* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Float3::GetMetadata() const {
  protobuf_syncMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_syncMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Float4::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Float4::kXFieldNumber;
const int Float4::kYFieldNumber;
const int Float4::kZFieldNumber;
const int Float4::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Float4::Float4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_syncMessage_2eproto::scc_info_Float4.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.Float4)
}
Float4::Float4(const Float4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_)) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.Float4)
}

void Float4::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
}

Float4::~Float4() {
  // @@protoc_insertion_point(destructor:TCCamp.Float4)
  SharedDtor();
}

void Float4::SharedDtor() {
}

void Float4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Float4::descriptor() {
  ::protobuf_syncMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_syncMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Float4& Float4::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_syncMessage_2eproto::scc_info_Float4.base);
  return *internal_default_instance();
}


void Float4::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.Float4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
  _internal_metadata_.Clear();
}

bool Float4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.Float4)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float w = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.Float4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.Float4)
  return false;
#undef DO_
}

void Float4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.Float4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // float w = 4;
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->w(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.Float4)
}

::google::protobuf::uint8* Float4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.Float4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // float w = 4;
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->w(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.Float4)
  return target;
}

size_t Float4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.Float4)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float w = 4;
  if (this->w() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Float4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.Float4)
  GOOGLE_DCHECK_NE(&from, this);
  const Float4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Float4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.Float4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.Float4)
    MergeFrom(*source);
  }
}

void Float4::MergeFrom(const Float4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.Float4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
}

void Float4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.Float4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Float4::CopyFrom(const Float4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.Float4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Float4::IsInitialized() const {
  return true;
}

void Float4::Swap(Float4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Float4::InternalSwap(Float4* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(w_, other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Float4::GetMetadata() const {
  protobuf_syncMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_syncMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerSyncInfo::InitAsDefaultInstance() {
  ::TCCamp::_PlayerSyncInfo_default_instance_._instance.get_mutable()->position_ = const_cast< ::TCCamp::Float3*>(
      ::TCCamp::Float3::internal_default_instance());
  ::TCCamp::_PlayerSyncInfo_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::TCCamp::Float4*>(
      ::TCCamp::Float4::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSyncInfo::kPositionFieldNumber;
const int PlayerSyncInfo::kRotationFieldNumber;
const int PlayerSyncInfo::kSpeedFieldNumber;
const int PlayerSyncInfo::kPlayerIDFieldNumber;
const int PlayerSyncInfo::kPlayerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSyncInfo::PlayerSyncInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_syncMessage_2eproto::scc_info_PlayerSyncInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.PlayerSyncInfo)
}
PlayerSyncInfo::PlayerSyncInfo(const PlayerSyncInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.has_position()) {
    position_ = new ::TCCamp::Float3(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::TCCamp::Float4(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.PlayerSyncInfo)
}

void PlayerSyncInfo::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&position_)) + sizeof(speed_));
}

PlayerSyncInfo::~PlayerSyncInfo() {
  // @@protoc_insertion_point(destructor:TCCamp.PlayerSyncInfo)
  SharedDtor();
}

void PlayerSyncInfo::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void PlayerSyncInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerSyncInfo::descriptor() {
  ::protobuf_syncMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_syncMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSyncInfo& PlayerSyncInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_syncMessage_2eproto::scc_info_PlayerSyncInfo.base);
  return *internal_default_instance();
}


void PlayerSyncInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.PlayerSyncInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  speed_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerSyncInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.PlayerSyncInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TCCamp.Float3 Position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Float4 Rotation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PlayerID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerSyncInfo.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes PlayerName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playername()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.PlayerSyncInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.PlayerSyncInfo)
  return false;
#undef DO_
}

void PlayerSyncInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.PlayerSyncInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.Float3 Position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position(), output);
  }

  // .TCCamp.Float4 Rotation = 2;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_rotation(), output);
  }

  // float Speed = 3;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->speed(), output);
  }

  // string PlayerID = 4;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerSyncInfo.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->playerid(), output);
  }

  // bytes PlayerName = 5;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->playername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.PlayerSyncInfo)
}

::google::protobuf::uint8* PlayerSyncInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.PlayerSyncInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.Float3 Position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position(), deterministic, target);
  }

  // .TCCamp.Float4 Rotation = 2;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_rotation(), deterministic, target);
  }

  // float Speed = 3;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->speed(), target);
  }

  // string PlayerID = 4;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerSyncInfo.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->playerid(), target);
  }

  // bytes PlayerName = 5;
  if (this->playername().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->playername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.PlayerSyncInfo)
  return target;
}

size_t PlayerSyncInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.PlayerSyncInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 4;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  // bytes PlayerName = 5;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->playername());
  }

  // .TCCamp.Float3 Position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .TCCamp.Float4 Rotation = 2;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // float Speed = 3;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerSyncInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.PlayerSyncInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSyncInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSyncInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.PlayerSyncInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.PlayerSyncInfo)
    MergeFrom(*source);
  }
}

void PlayerSyncInfo::MergeFrom(const PlayerSyncInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.PlayerSyncInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.has_position()) {
    mutable_position()->::TCCamp::Float3::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::TCCamp::Float4::MergeFrom(from.rotation());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
}

void PlayerSyncInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.PlayerSyncInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSyncInfo::CopyFrom(const PlayerSyncInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.PlayerSyncInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSyncInfo::IsInitialized() const {
  return true;
}

void PlayerSyncInfo::Swap(PlayerSyncInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSyncInfo::InternalSwap(PlayerSyncInfo* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  playername_.Swap(&other->playername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(speed_, other->speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerSyncInfo::GetMetadata() const {
  protobuf_syncMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_syncMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerSyncInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerSyncInfo::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerSyncInfo::ServerSyncInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_syncMessage_2eproto::scc_info_ServerSyncInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.ServerSyncInfo)
}
ServerSyncInfo::ServerSyncInfo(const ServerSyncInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.ServerSyncInfo)
}

void ServerSyncInfo::SharedCtor() {
}

ServerSyncInfo::~ServerSyncInfo() {
  // @@protoc_insertion_point(destructor:TCCamp.ServerSyncInfo)
  SharedDtor();
}

void ServerSyncInfo::SharedDtor() {
}

void ServerSyncInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerSyncInfo::descriptor() {
  ::protobuf_syncMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_syncMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerSyncInfo& ServerSyncInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_syncMessage_2eproto::scc_info_ServerSyncInfo.base);
  return *internal_default_instance();
}


void ServerSyncInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.ServerSyncInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  _internal_metadata_.Clear();
}

bool ServerSyncInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.ServerSyncInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.PlayerSyncInfo Players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.ServerSyncInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.ServerSyncInfo)
  return false;
#undef DO_
}

void ServerSyncInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.ServerSyncInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.PlayerSyncInfo Players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->players(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.ServerSyncInfo)
}

::google::protobuf::uint8* ServerSyncInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.ServerSyncInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.PlayerSyncInfo Players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->players(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.ServerSyncInfo)
  return target;
}

size_t ServerSyncInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.ServerSyncInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.PlayerSyncInfo Players = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerSyncInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.ServerSyncInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerSyncInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerSyncInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.ServerSyncInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.ServerSyncInfo)
    MergeFrom(*source);
  }
}

void ServerSyncInfo::MergeFrom(const ServerSyncInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.ServerSyncInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
}

void ServerSyncInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.ServerSyncInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerSyncInfo::CopyFrom(const ServerSyncInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.ServerSyncInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerSyncInfo::IsInitialized() const {
  return true;
}

void ServerSyncInfo::Swap(ServerSyncInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerSyncInfo::InternalSwap(ServerSyncInfo* other) {
  using std::swap;
  CastToBase(&players_)->InternalSwap(CastToBase(&other->players_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerSyncInfo::GetMetadata() const {
  protobuf_syncMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_syncMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace TCCamp
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::Float3* Arena::CreateMaybeMessage< ::TCCamp::Float3 >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::Float3 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::Float4* Arena::CreateMaybeMessage< ::TCCamp::Float4 >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::Float4 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::PlayerSyncInfo* Arena::CreateMaybeMessage< ::TCCamp::PlayerSyncInfo >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::PlayerSyncInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::ServerSyncInfo* Arena::CreateMaybeMessage< ::TCCamp::ServerSyncInfo >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::ServerSyncInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
